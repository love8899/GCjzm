@model Wfm.Shared.Models.Search.SearchJobPostingModel
@{
    Layout = "_SearchLayout.cshtml";
    ViewBag.FromDate = Model.sf_Start.ToShortDateString();
    ViewBag.ToDate = Model.sf_End.ToShortDateString();

    var today = DateTime.Today;
    var nextEnd = today.AddMonths(1).AddDays(-1);
    var lastStart = today.AddMonths(-1).AddDays(1);

    var defaultTitle = (string)ViewData["DefaultTitle"] ?? string.Empty;
}

@section DateRange {
    @Html.EditorFor(x => x.sf_Start, "Date", new { OnChange = "onFromChange" })
    <i class="fa fa-angle-right"></i>
    @Html.EditorFor(x => x.sf_End, "Date", new { OnChange = "onToChange" })
    <script type="text/javascript">
        function onFromChange(e) {
            var toPicker = $('#sf_To').data('kendoDatePicker');
            if (period) {
                var to = addDays(this.value(), period);
                toPicker.max(to); toPicker.value(to);
            }
            toPicker.trigger('change');   // refresh grid anyway
        }
        function onToChange(e) { $('#btn-search').click(); }
    </script>
}

@section Shortcuts {
    <button class="btn btn-sm btn-info btn-flat bg-dark-blue  margin-r-5" id="btn-default" title="@defaultTitle">Default</button>
    <button class="btn btn-sm btn-info btn-flat bg-blue margin-r-5" id="btn-last" title="Effetive within last 30 days">Last</button>
    <button class="btn btn-sm btn-info btn-flat bg-light-blue" id="btn-this" data-chart-period="week" title="Effetive within next 30 days">This</button>
    <script type="text/javascript">
        $("#btn-this").on("click", function () {
            reloadByDataRange('@(today.ToShortDateString())', '@(nextEnd.ToShortDateString())', 'sf_Start', 'sf_End');
        });
        $("#btn-last").on("click", function () {
            reloadByDataRange('@(lastStart.ToShortDateString())', '@(today.ToShortDateString())', 'sf_Start', 'sf_End');
        });
        $("#btn-default").on("click", function () {
            reloadByDataRange('@(Model.sf_Start.ToShortDateString())', '@(Model.sf_End.ToShortDateString())', 'sf_Start', 'sf_End');
        });
    </script>
}

<div class="col-md-6">
    @Html.InputFor(x => x.sf_CompanyLocationId, "DropDownList", new { Items = Model.AvailableLocations })
    @Html.InputFor(x => x.sf_CompanyDepartmentId, "CascadeDropDownList", new { Controller = "Company", Action = "GetCascadeDepartments", OnData = "filterDepartments", From = "sf_CompanyLocationId" })
    <script>function filterDepartments() { return { locationId: $("#sf_CompanyLocationId").val(), addNone: false }; }</script>
    @Html.InputFor(x => x.sf_PositionId, "DropDownList", new { Items = Model.AvailablePositions })
    @Html.InputFor(x => x.sf_ShiftId, "DropDownList", new { Items = Model.AvailableShifts })
</div>
<div class="col-md-6">
    @Html.InputFor(x => x.sf_JobTitle)
    @Html.InputFor(x => x.sf_JobPostingStatusId, "DropDownList", new { Items = Model.AvailableStatus })
    @Html.InputLineFor(x => x.sf_IsSubmitted, "Submitted ONLY")
    @*@Html.InputFor(x => x.sf_SubmittedBy, "DropDownList", new { Items = Model.AvailableContacts })*@
    @Html.InputLineFor(x => x.sf_IsPublished, "Published ONLY")
</div>
