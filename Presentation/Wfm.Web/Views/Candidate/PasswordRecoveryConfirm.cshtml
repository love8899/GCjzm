@model PasswordRecoveryConfirmModel
@using Wfm.Web.Models.Accounts
@{
    Layout = "~/Views/Shared/Layout/_ColumnsOne.cshtml";
    ViewBag.PageClass = "html-password-recovery-page";
}

<div class="page password-recovery-page">
    <div class="page-title">
        <h1>Password Recovery</h1>
    </div>
    <div class="page-body">
        @if (!String.IsNullOrEmpty(Model.Result))
        {
            <div class="result">
                @Model.Result
            </div>
        }
        else
        {
            <p>Reset your password here. You also need to validate your security question answers.</p>
        }
        @if (!Model.SuccessfullyChanged)
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.PasswordPolicyModel.Code)
                @Html.HiddenFor(model => model.PasswordPolicyModel.PasswordHistory)
                @Html.HiddenFor(model => model.PasswordPolicyModel.PasswordLifeTime)
                @Html.HiddenFor(model => model.PasswordPolicyModel.MinLength)
                @Html.HiddenFor(model => model.PasswordPolicyModel.MaxLength)
                @Html.HiddenFor(model => model.PasswordPolicyModel.RequireLowerCase)
                @Html.HiddenFor(model => model.PasswordPolicyModel.RequireNumber)
                @Html.HiddenFor(model => model.PasswordPolicyModel.RequireSymbol)
                @Html.HiddenFor(model => model.PasswordPolicyModel.RequireUpperCase)
                <div class="fieldset">
                    <div class="form-fields">
                        <div class="inputs">
                            @Html.LabelFor(model => model.NewPassword, new { }, ":")
                            @Html.EditorFor(model => model.NewPassword)
                            @*@Html.RequiredHint()*@
                            @Html.ValidationMessageFor(model => model.NewPassword)
                            @*@Html.WfmValidationMessageFor(model => model.NewPassword)*@
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.ConfirmNewPassword, new { }, ":")
                            @Html.EditorFor(model => model.ConfirmNewPassword)
                            @*@Html.RequiredHint()*@
                            @Html.ValidationMessageFor(model => model.ConfirmNewPassword)
                            @*@Html.WfmValidationMessageFor(model => model.ConfirmNewPassword)*@
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.SecurityQuestion1, new { }, ":")
                            @Html.HiddenFor(model => model.SecurityQuestion1)
                            @Html.DisplayFor(model => model.SecurityQuestion1)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.SecurityQuestion1Answer, new { }, ":")
                            @Html.EditorFor(model => model.SecurityQuestion1Answer)
                            @*@Html.RequiredHint()*@
                            @Html.WfmValidationMessageFor(model => model.SecurityQuestion1Answer)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.SecurityQuestion2, new { }, ":")
                            @Html.DisplayFor(model => model.SecurityQuestion2)
                            @Html.HiddenFor(model => model.SecurityQuestion2)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.SecurityQuestion2Answer, new { }, ":")
                            @Html.EditorFor(model => model.SecurityQuestion2Answer)
                            @*@Html.RequiredHint()*@
                            @Html.WfmValidationMessageFor(model => model.SecurityQuestion2Answer)
                        </div>
                    </div>
                </div>
                <div class="buttons">
                    <input type="submit" name="set-password" class="button-1 new-password-button" value="@T("Admin.Common.Submit")" />
                </div>
            }
        }
    </div>
</div>
