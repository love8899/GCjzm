@using Wfm.Services.Security
@using Wfm.Services.Companies
@{
    var permissionService = EngineContext.Current.Resolve<IPermissionService>();
    var companyLocationService = EngineContext.Current.Resolve<ICompanyDivisionService>();
    var locations = companyLocationService.GetAllCompanyLocations().Select(x => new SelectListItem() { Text=x.LocationName,Value=x.Id.ToString()});
}
<script src="@Url.Content("~/Scripts/admin.common.js?version=1.8")" type="text/javascript"></script>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Kendo().Grid<CompanyDepartmentModel>()
                .Name("companydepartment-grid")
                .Columns(columns =>
                {
                    columns.Bound(x => x.DepartmentName);
                    columns.ForeignKey(x => x.CompanyLocationId,locations,"Value","Text").EditorTemplateName("CompanyLocationEditor");
                    columns.Bound(x => x.PhoneNumber).ClientTemplate("#= prettyPhone(PhoneNumber) #").EditorTemplateName("PhoneEditor").Width(150);
                    columns.Bound(x => x.FaxNumber).ClientTemplate("#= prettyPhone(FaxNumber) #").EditorTemplateName("PhoneEditor").Width(150);

                    columns.Bound(x => x.Note).Hidden();

                    columns.Bound(x => x.IsActive)
                            .ClientTemplate("#if (IsActive == true) {# <span class='k-icon k-i-tick'/> #}else{# <span class='k-icon k-i-close'/> #}#")
                            .HeaderHtmlAttributes(new { style = "text-align:center" }).HtmlAttributes(new { style = "text-align:center" })
                            .Width(80).Hidden();

                    columns.Bound(x => x.UpdatedOnUtc).ClientTemplate("#=kendo.toString(UpdatedOn,'yyyy-MM-dd HH:mm')#").Width(120).Hidden();
                    columns.Bound(x => x.CreatedOnUtc).ClientTemplate("#=kendo.toString(CreatedOn,'yyyy-MM-dd HH:mm')#").Width(120).Hidden(true);

                    if (permissionService.Authorize("ManageCompanyDepartments"))
                    {
                        columns.Command(command => { command.Destroy().Text(" "); }).Width(60);
                    }
                })
                        .ToolBar(toolBar => { if (permissionService.Authorize("ManageCompanyDepartments")) { toolBar.Save(); toolBar.Create(); } })
                        .Editable(editable => { if (permissionService.Authorize("ManageCompanyDepartments")) { editable.Mode(GridEditMode.InCell); } })
                        .EnableCustomBinding(false)
                        .Filterable()
                        .Sortable()
                        .ColumnMenu()
                        .Selectable()
                        .Events(e=>e.Edit("onEdit"))
                        .Pageable(x => x.PageSizes(new[] { 10, 20, 30, 50, 100 }).Refresh(true))
                        .DataSource(ds => ds
                            .Ajax()
                            .ServerOperation(true)
                            .PageSize(20)
                            .Batch(true)
                            .Read(read => read.Action("_CompanyDepartmentList", "Company").Data("getGuid"))
                            .Events(events => events.Error("error_handler1"))
                            .Model(model =>
                            {
                                model.Id(p => p.Id);
                                model.Field(p => p.CompanyLocationId).Editable(true).DefaultValue(0);
                                model.Field(p => p.IsActive).Editable(true).DefaultValue(true);
                                model.Field(p => p.CreatedOn).Editable(false).DefaultValue(DateTime.Now);
                                model.Field(p => p.UpdatedOn).Editable(false).DefaultValue(DateTime.Now);
                                model.Field(p => p.UpdatedOnUtc).Editable(false).DefaultValue(DateTime.UtcNow);
                                model.Field(p => p.CreatedOnUtc).Editable(false).DefaultValue(DateTime.UtcNow);

                            })
                            .Create(update => update.Action("_CreateNewDepartment", "Company"))
                            .Update(update => update.Action("_EditDepartment", "Company"))
                            .Destroy(update => update.Action("_DeleteDepartment", "Company"))
                        )
            )
        </td>
    </tr>
</table>
