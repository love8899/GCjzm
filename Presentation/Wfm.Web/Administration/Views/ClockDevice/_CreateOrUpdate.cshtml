@using Wfm.Core.Domain.Accounts

@model CompanyClockDeviceModel

@{
    var workContext = EngineContext.Current.Resolve<Wfm.Core.IWorkContext>();
    var companyId = workContext.CurrentAccount.IsClientAdministrator() ? workContext.CurrentAccount.CompanyId : 0;
}

@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.CreatedOnUtc)
@Html.HiddenFor(model => model.UpdatedOnUtc)

<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.CompanyName)
        </td>
        <td class="adminData required">
            @(Html.Kendo().DropDownList()
                                        .Name("CompanyId")
                                        .OptionLabel("--Select--")
                                        .DataTextField("Text")
                                        .DataValueField("Value")
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                                {
                                                    read.Action("GetCascadeCompanies", "Common");
                                                });
                                        })
            )
            @Html.WfmValidationMessageFor(model => model.CompanyId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.CompanyLocationId)
        </td>
        <td class="adminData required">
            @(Html.Kendo().DropDownList()
                                        .Name("CompanyLocationId")
                                        .OptionLabel("--Select--")
                                        .DataTextField("Text")
                                        .DataValueField("Value")
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                                {
                                                    read.Action("GetCascadeLocations", "Common").Data("filterLocations");
                                                })
                                                .ServerFiltering(true);
                                        })
                                        .Enable(false)
                                        .AutoBind(false)
                                        .CascadeFrom("CompanyId")
            )
            <script>function filterLocations() { return { companyid: $("#CompanyId").val() }; }</script>
            @Html.WfmValidationMessageFor(model => model.CompanyLocationId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.ClockDeviceUid)
        </td>
        <td class="adminData required">
            @Html.EditorFor(model => model.ClockDeviceUid)
            @Html.WfmValidationMessageFor(model => model.ClockDeviceUid)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.IPAddress)
        </td>
        <td class="adminData required">
            @Html.TextBoxFor(model => model.IPAddress, new { @class = "k-textbox", placeholder = "Required only for Hand Punch" })
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.IDLength)
        </td>
        <td class="adminData">
            @Html.Kendo().NumericTextBoxFor(model => model.IDLength).Format("#").Min(5).Max(10).HtmlAttributes(new { style = "width:100px" })
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.ManualID)
        </td>
        <td class="adminData">
            @Html.CheckBoxFor(model => model.ManualID)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.RefreshHour)
        </td>
        <td class="adminData">
            @Html.Kendo().NumericTextBoxFor(model => model.RefreshHour).Format("#").Min(0).Max(23).HtmlAttributes(new { style = "width:100px" })
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.ExpiryDays)
        </td>
        <td class="adminData">
            @Html.Kendo().NumericTextBoxFor(model => model.ExpiryDays).Format("#").Min(1).HtmlAttributes(new { style = "width:100px" })
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.AddOnEnroll)
        </td>
        <td class="adminData">
            @Html.CheckBoxFor(model => model.AddOnEnroll)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.AltIdReader)
        </td>
        <td class="adminData">
            @Html.CheckBoxFor(model => model.AltIdReader)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.IsActive)
        </td>
        <td class="adminData">
            @Html.CheckBoxFor(model => model.IsActive)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.Note)
        </td>
        <td class="adminData">
            @*@{ Html.Kendo().Editor()
                    .Name("Note")
                    .Encode(false)
                    .Value(@<text></text>)
                    .Render();
                }*@
            @Html.EditorFor(model => model.Note)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.ReasonForDeactivation)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.ReasonForDeactivation)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.CreatedOn)
        </td>
        <td class="adminData">
            @Html.DisplayFor(model => model.CreatedOn)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.LabelFor(model => model.UpdatedOn)
        </td>
        <td class="adminData">
            @Html.DisplayFor(model => model.UpdatedOn)
        </td>
    </tr>
</table>


<script>

    $(function () {
        var ddl = $('#CompanyId').data('kendoDropDownList');
        if (ddl && @companyId) {
            if (!@Model.Id)
                ddl.value(@companyId);
            ddl.readonly(true);
        }
    });

</script>
