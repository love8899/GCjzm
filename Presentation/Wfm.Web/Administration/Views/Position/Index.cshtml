@using Wfm.Services.Companies;
@using Wfm.Core;
@using Wfm.Core.Domain.Accounts

@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Positions").Text;
    var workContext = EngineContext.Current.Resolve<IWorkContext>();
    var companyService = EngineContext.Current.Resolve<ICompanyService>();
    var companies = companyService.GetAllCompanies(workContext.CurrentAccount);
}
<div class="section-header">
    <div class="title">
        @T("Admin.Configuration.Positions") @Html.ActionLink("(" + T("Admin.Common.BackToConfiguration") + ")", "Index", "Configuration")
    </div>
</div>

<table class="adminContent">
    <tr>
        <td>

            @(Html.Kendo().Grid<PositionModel>()
                .Name("company-position-grid")
                .Columns(columns =>
                {
                    if (!workContext.CurrentAccount.IsClientAdministrator())
                    {
                        columns.ForeignKey(x => x.CompanyId, companies, "Value", "Text")
                                .HeaderTemplate(T("Common.Company").Text).Filterable(true);
                    }
                    columns.Bound(x => x.Code).Width(200);
                    columns.Bound(x => x.Name);
                    columns.Command(command => { command.Destroy().Text(" "); }).Width(60);
                })
                .ToolBar(toolBar => { toolBar.Save(); toolBar.Create(); })
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                .EnableCustomBinding(false)
                .Filterable()
                .Sortable()
                .ColumnMenu()
                .Selectable()
                .Pageable(x => x.PageSizes(new[] { 10, 20, 30, 50, 100 }).Refresh(true))
                .DataSource(ds => ds
                    .Ajax()
                    .ServerOperation(true)
                    .PageSize(20)

                    .Batch(true)
                    .Read(read => read.Action("_CompanyPositionList", "Position"))
                    .Events(events => events.Error("error_handler"))
                    .Model(model =>
                    {
                        model.Id(x => x.Id);
                        model.Field(x => x.CompanyId).Editable(true);
                        model.Field(x => x.Code).Editable(true);
                        model.Field(x => x.Name).Editable(true);
                    })
                    .Create(update => update.Action("_AddCompanyPosition", "Position"))
                    .Update(update => update.Action("_EditCompanyPosition", "Position"))
                    .Destroy(update => update.Action("_RemoveCompanyPosition", "Position"))
                            .Events(events => events.Sync(@"function(e){setTimeout(function(){refreshGrid('#company-position-grid')})}"))
                )
                    //.Events(ev => ev.Remove(@"function(e){setTimeout(function(){$('#companyvendor-grid').data('kendoGrid').dataSource.sync()})}")
                    //                //.Save(@"function(e){setTimeout(function(){$('#companyvendor-grid').data('kendoGrid').dataSource.sync()})}")
                    //        )
            )

        </td>
    </tr>
</table>