@{
    Layout = null;
}


<script type="text/javascript">

    function onHandDataBound(e) {
        applyCommandIcons();
        showOrHideButton(e.sender);
    }

    function applyCommandIcons() {
        $(".k-grid-Add").attr('title', 'Add').html('<span class="fa fa-plus"></span>');
        $(".k-grid-Update").attr('title', 'Update').html('<span class="fa fa-pencil"></span>');
    }

    function showOrHideButton(grid) {
        var data = grid.dataSource.data();
        for (var i = 0; i < data.length; i++) {
            var currentData = data[i];
            var theRow = grid.tbody.find(">tr:not(.k-grouping-row)").eq(i);
            if (currentData.HandTemplateGuid != '@(Guid.Empty.ToString())') {
                theRow.find(".k-grid-Add").remove();
            }
            else {
                theRow.find(".k-grid-Update").remove();
                theRow.find(".checkboxGroups").remove();
            }
        }
    }

    function refreshHandGrid() { $("#hand-template-grid").data("kendoGrid").dataSource.read(); }

    function addTemplate(e, msg) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        enrollTemplate(dataItem, 'The employee hand template is added successfully.')
    }

    function updateTemplate(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        enrollTemplate(dataItem, 'The employee hand template is updated successfully.')
    }

    function enrollTemplate(dataItem, msg) {
        $(document.body).append('<div id="enrollUser"></div>');
        $("#enrollUser").kendoWindow({
            title: "Enroll hand template",
            modal: true,
            resizable: false,
            width: 480,
            height: 240,
            content: '@Url.Action("_Enroll", "HandTemplate")' + '/' + dataItem.CandidateId,
            close: function () { setTimeout(function () { $('#enrollUser').kendoWindow('destroy'); }, 200); },
            refresh: function (e) {
                var win = this;
                $('#btn-cancel').click(function () { win.close(); });
                $('#btn-start').click(function () {
                    var clockDeviceId = $('#ClockDeviceId').val();
                    if (clockDeviceId) {
                        if (startEnrolling(clockDeviceId, dataItem.CandidateId)) {
                            $('#enrolment-confirm').dialog({
                                resizable: false,
                                height: "auto",
                                width: 540,
                                modal: true,
                                title: 'Enrolment done successfully?',
                                buttons: {
                                    "Yes": function () {
                                        $(this).dialog("close");
                                        if (getLastEnrolled(clockDeviceId, dataItem.CandidateId)) {
                                            showMsg(msg);
                                            refreshHandGrid();
                                        } else {
                                            showMsg('Cannot get the hand template of enrolled user.');
                                        }
                                    },
                                    'No': function () {
                                        $(this).dialog("close");
                                    }
                                }
                            });
                        }
                        win.close();
                    }
                    else
                        alert('Clock device is not selected.');
                });
            }
        }).data('kendoWindow').center();
    }

    function startEnrolling(clockDeviceId, candidateId) {
        var result = true;
        $.ajax({
            type: "POST",
            async: false,
            url: '@Url.Action("StartEnrolling", "Handtemplate")',
            data: { clockDeviceId: clockDeviceId, candidateId: candidateId },
            success: function (response) {
                if (!response.Result) {
                    result = false;
                    alert(response.ErrorMessage);
                }
            }
        });
        return result;
    }

    function getLastEnrolled(clockDeviceId, candidateId) {
        var result = true;
        $.ajax({
            type: "POST",
            async: false,
            url: '@Url.Action("GetLastEnrolled", "Handtemplate")',
            data: { clockDeviceId: clockDeviceId, candidateId: candidateId },
            success: function (response) {
                if (!response.Result) {
                    result = false;
                    alert(response.ErrorMessage);
                }
            }
        });
        return result;
    }

    function showMsg(msg) {
        $(".notification-wrapper").html('<div class="messageBox messageBoxSuccess"></div><div class="clear"></div>');
        $(".messageBox").text(msg);
    }

</script>


<div class="section-header">
    <div class="title">
        @T("Admin.HandTemplates")
    </div>
</div>

<table class="adminContent">
    <tr>
        <td>
            @(Html.Kendo().Grid<HandTemplateModel>()
                        .Name("hand-template-grid")
                        .Events(events => events.DataBound("onHandDataBound"))
                        .Columns(columns =>
                        {
                            columns.Bound(x => x.CandidateId).Width(150);

                            columns.Bound(x => x.EmployeeId)
                                .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")))
                                .ClientTemplate(@Html.ActionLink("#= EmployeeId #", "Details", "Candidate", new { guid = "#=CandidateGuid#" }, new { target = "_blank" }).ToHtmlString());

                            columns.Bound(x => x.SmartCardUid).Filterable(true).Sortable(true);

                            columns.Bound(x => x.CandidateLastName).Filterable(true).Sortable(true);
                            columns.Bound(x => x.CandidateFirstName).Filterable(true).Sortable(true);

                            columns.Bound(x => x.IsActive)
                                .ClientTemplate("#if (IsActive) {# <span class='k-icon k-i-tick'/> #}else{# <span class='k-icon k-i-close'/> #}#")
                                .HeaderHtmlAttributes(new { style = "text-align:center" }).HtmlAttributes(new { style = "text-align:center" })
                                .Width(120);

                            columns.Bound(x => x.Note)
                                .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")))
                                .Hidden(true);

                            columns.Bound(x => x.CreatedOnUtc)
                                .ClientTemplate("#if (CreatedOn > new Date(1,1,1)) {# #=kendo.toString(CreatedOn,'yyyy-MM-dd HH:mm')# #}#")
                                .Width(120);
                            columns.Bound(x => x.UpdatedOnUtc)
                                .ClientTemplate("#if (UpdatedOn > new Date(1,1,1)) {# #=kendo.toString(UpdatedOn,'yyyy-MM-dd HH:mm')# #}#")
                                .Width(120);

                            columns.Command(command =>
                            {
                                command.Custom("Add").Click("addTemplate").Text("");
                                command.Custom("Update").Click("updateTemplate").Text("");
                            }).Title(T("Common.Action").Text).HtmlAttributes(new { align = "center" }).Width(120);
                        })
                        .EnableCustomBinding(true)
                        .Reorderable(reorder => reorder.Columns(true))
                        .Resizable(resize => resize.Columns(true))
                        .ColumnMenu(d => d.Sortable(false))
                        .Sortable()
                        .Selectable()
                        .Pageable(x => x.PageSizes(new[] { 10, 20 }).Refresh(true))
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .ServerOperation(true)
                            .PageSize(10)
                            .Read(read => read.Action("Index", "HandTemplate", new { candidateId = ViewBag.CandidateId }))
                            .Sort(sort => sort.Add(x => x.CandidateId))
                        )
            )
        </td>
    </tr>
</table>

<div id="enrolment-confirm" style="display:none">
    <span>
        Follow instructions on the clock to enroll hand tempalte.<br /><br />
        If the enrolment done successfully, click Yes.<br />
        Otherwise click No, and press Clear button on clock.
    </span>
</div>
