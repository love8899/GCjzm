@model IEnumerable<CandidateKeySkillModel>
@{
    ViewBag.Title = T("Admin.Candidate.CandidateKeySkills").Text;
}

<div class="section-header">
    <div class="title">
        @T("Admin.Candidate.CandidateKeySkills")
    </div>
    <div class="options">
    </div>
</div>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Kendo().Grid<CandidateKeySkillModel>()
                .Name("candidatekeyskills-grid")
                .Columns(columns =>
                {
                    columns.Bound(x => x.CandidateId).Title(@T("Common.Id").Text).Width(75);

                    columns.Bound(x => x.EmployeeId).Width(180)
                           .ClientTemplate(@Html.ActionLink("#=EmployeeId#", "Details", new { guid = "#=CandidateGuid#" }, new { target = "_blank" }).ToHtmlString());
                    columns.Bound(x => x.CandidateName).Title(T("Common.EmployeeName").Text).Width(200);
                    columns.Bound(x => x.KeySkill)
                        .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")));
                    
                    columns.Bound(x => x.LastUsedDate)
                        .ClientTemplate("#=kendo.toString(LastUsedDate,'yyyy-MM-dd')#")
                        .Width(180);
                    columns.Bound(x => x.Note)
                        .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")))
                        .Hidden(true);

                    columns.Bound(x => x.UpdatedOnUtc)
                        .Filterable(ftb => ftb.Cell(cell => cell.Enabled(false)))
                        .ClientTemplate("#=kendo.toString(UpdatedOn,'yyyy-MM-dd HH:mm')#")
                        .Width(120);
                    
                    columns.Bound(x => x.CreatedOnUtc)
                        .Filterable(ftb => ftb.Cell(cell => cell.Enabled(false)))
                        .ClientTemplate("#=kendo.toString(CreatedOn,'yyyy-MM-dd HH:mm')#")
                        .Width(120).Hidden(true);

                })
                .EnableCustomBinding(true)
                .Reorderable(reorder => reorder.Columns(true))
                .Resizable(resize => resize.Columns(true))
                .ColumnMenu(d => d.Sortable(false))
                .Sortable()
                .Selectable()
                .Pageable(x => x.PageSizes(new[] { 10, 20, 30, 50, 100 }).Refresh(true))
                .DataSource(dataSource => dataSource
                        .Ajax()
                        .ServerOperation(true)
                        .PageSize(20)
                        .Read(read => read.Action("ListBySkills", "Candidate"))
                )
                .Filterable(filterable => filterable
                    .Extra(false)
                    .Operators(operators => operators
                        .ForString(str => str.Clear()
                            .Contains("Contains")
                            .IsEqualTo("Is equal to")
                            .IsNotEqualTo("Is not equal to")
                        )
                    )
                )
            )
        </td>
    </tr>
</table>