@model IEnumerable<BlogPostModel>

@{
    //page title
    ViewBag.Title = T("Admin.ContentManagement.Blog.BlogPosts").Text;
}

<div class="section-header">
    <div class="title">
        @T("Admin.ContentManagement.Blog.BlogPosts")
    </div>
    <div class="options">
        @Html.ActionLink(T("Common.Add").Text, "Create", null, new { @class = "k-button" })
    </div>
</div>

<table class="adminContent">
    <tr>
        <td>
            @(Html.Kendo().Grid<BlogPostModel>()
                .Name("blogpost-grid")
                .BindTo(Model)
                .Columns(columns =>
                {
                    columns.Bound(x => x.Title);
                    columns.Bound(x => x.LanguageName);
                    columns.Bound(x => x.Comments)
                    .Template(@<div>@Html.ActionLink(T("View").Text + " - " + @item.Comments, "Comments", new { filterByBlogPostId = item.Id })</div>)
                    .ClientTemplate("<div><a href=\"Comments?filterByBlogPostId=#= Id #\">" + T("Common.Comment").Text + " - <#= Comments #>" + "</a></div>");
                    columns.Bound(x => x.StartDateUtc).Format("{0:yyyy-MM-dd HH:mm}").Width(120);
                    columns.Bound(x => x.EndDateUtc).Format("{0:yyyy-MM-dd HH:mm}").Width(120);

                    columns.Bound(x => x.AllowComments);
                        
                    columns.Bound(x => x.UpdatedOnUtc).ClientTemplate("#=kendo.toString(UpdatedOn,'yyyy-MM-dd HH:mm')#").Width(120);
                    columns.Bound(x => x.CreatedOnUtc).ClientTemplate("#=kendo.toString(CreatedOn,'yyyy-MM-dd HH:mm')#").Width(120).Hidden(true);
                    
                    columns.Bound(x => x.Id)
                    .Template(x => Html.ActionLink(T("Edit").Text, "Edit", new { id = x.Id }))
                    .HeaderHtmlAttributes(new { style = "text-align:center" }).HtmlAttributes(new { style = "text-align:center" })
                    .ClientTemplate("<a class='-k-button' href=\"" + @Url.Content("~/Admin/Blog/Edit/") + "#= Id #\">" + "<span class='k-icon k-i-pencil'></span>" + "</a>")
                    .Width(70)
                    .HeaderTemplate(T("Admin.Common.Edit").Text)
                    .Filterable(false);
                })
                .EnableCustomBinding(true)
                .Reorderable(reorder => reorder.Columns(true))
                .Resizable(resize => resize.Columns(true))
                .ColumnMenu(d => d.Sortable(false))
                .Filterable()
                .Sortable()
                .Selectable()
                .Pageable(x => x.PageSizes(new[] { 10, 20, 30, 50, 100 }).Refresh(true))
                .DataSource(ds => ds
                    .Ajax()
                    .ServerOperation(true)
                    .PageSize(20)
                )
                .Filterable(filterable => filterable
                    .Extra(false)
                    .Operators(operators => operators
                        .ForString(str => str.Clear()
                            .Contains("Contains")
                            .IsEqualTo("Is equal to")
                            .IsNotEqualTo("Is not equal to")
                        )
                    )
                )
            )
        </td>
    </tr>
</table>
