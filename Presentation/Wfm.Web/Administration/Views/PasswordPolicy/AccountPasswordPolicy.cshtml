<div class="section-header">
    <div class="title">
        @T("Admin.Configuration.AccountPasswordPolicy") @Html.ActionLink("(" + T("Admin.Common.BackToConfiguration") + ")", "Index", "Configuration")
    </div>
</div>
@{
    List<SelectListItem> accountTypeList = new List<SelectListItem>();
    accountTypeList.Add(new SelectListItem() { Text = "Admin", Value = "Admin" });
    accountTypeList.Add(new SelectListItem() { Text = "Client", Value = "Client" });
    accountTypeList.Add(new SelectListItem() { Text = "Candidate", Value = "Candidate" });
}
<table class="adminContent">
    <tr>
        <td>
            @(Html.Kendo().Grid<AccountPasswordPolicyModel>()
                .Name("password-policy-grid")
                .Columns(columns =>
                {
                    columns.ForeignKey("AccountType", accountTypeList,"Text","Value");
                    columns.ForeignKey("PasswordPolicyId", ViewBag.PasswordPolicies, "Value", "Text");
                    columns.Command(command => command.Destroy().Text(" ").HtmlAttributes(new { title = T("Common.Delete").Text })).Width(60);
                })
                .ToolBar(toolBar => { toolBar.Save(); toolBar.Create(); })
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                .EnableCustomBinding(false)
                .Filterable()
                .Sortable()
                .ColumnMenu()
                .Selectable()
                .Pageable(x => x.PageSizes(new[] { 10, 20, 30, 50, 100 }).Refresh(true))
                .DataSource(ds => ds
                    .Ajax()
                    .ServerOperation(true)
                    .PageSize(20)
                    .Batch(true)
                    .Read(read => read.Action("GetAllAccountPasswordPolicy", "PasswordPolicy"))
                    .Events(events => events.Error("error_handler"))
                    .Model(model =>
                    {
                        model.Id("Id");
                        model.Field(p => p.AccountType).Editable(true).DefaultValue("Admin");
                        model.Field(p => p.PasswordPolicyId).Editable(true).DefaultValue(0);
                        model.Field(p => p.CreatedOnUtc).Editable(false).DefaultValue(DateTime.UtcNow);
                        model.Field(p => p.UpdatedOnUtc).Editable(false).DefaultValue(DateTime.UtcNow);
                    })
                    .Create(update => update.Action("_CreateNewAccountPasswordPolicy", "PasswordPolicy"))
                    .Update(update => update.Action("_EditAccountPasswordPolicy", "PasswordPolicy"))
                    .Destroy(update => update.Action("_DeleteAccountPasswordPolicy", "PasswordPolicy"))
                )
            )
        </td>
    </tr>
</table>

